// Filename: luiAtlas.h
// Created by:  tobspr (29Aug14)
//

#ifndef LUI_ATLAS_H
#define LUI_ATLAS_H

#include <fstream>

#include "pandabase.h"
#include "pandasymbols.h"
#include "luse.h"
#include "texture.h"
#include "texturePool.h"

#include "config_lui.h"

/**
 * @brief Stores an entry in the atlas
 * @details This is a container class for storing positions in the atlas.
 *   It contains a start uv-coordinate and uv-size.
 *
 */
struct LUIAtlasEntry {
  LTexCoord pos;
  LTexCoord size;
  LUIAtlasEntry() : pos(0), size(0) {};
  LUIAtlasEntry(float x, float y, float w, float h) : pos(x, y), size(w, h) {};
};

/**
 * @brief This is the container class for an atlas
 * @details This class manages the storage of a single atlas texture, including
 *   storing a reference to the atlas texture, the atlas size, and the atlas entries.
 *   It provides functions to load atlas descriptions generated by LUIAtlasGen too.
 */
class EXPCL_LUI LUIAtlas : public ReferenceCount {

PUBLISHED:

  bool load_descriptor_file(const string& descriptor_path);
  bool load_texture(const string& texture_path);

  INLINE Texture* get_texture() const;

  INLINE bool has_entry(const string& name) const;
  INLINE const LUIAtlasEntry& get_entry(const string& name) const;

  INLINE int get_size() const;

private:

  PT(Texture) _tex;
  pmap<string, LUIAtlasEntry> _entries;

};

#include "luiAtlas.I"

#endif
